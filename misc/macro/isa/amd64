# ------------------------------------------------------ Registers --

al=0;  ax=0;  eax=0;  rax=0;   r8=0
cl=1;  cx=1;  ecx=1;  rcx=1;   r9=1
dl=2;  dx=2;  edx=2;  rdx=2;  r10=2
bl=3;  bx=3;  ebx=3;  rbx=3;  r11=3
ah=4;  sp=4;  esp=4;  rsp=4;  r12=4
ch=5;  bp=5;  ebp=5;  rbp=5;  r13=5
dh=6;  si=6;  esi=6;  rsi=6;  r14=6
bh=7;  di=7;  edi=7;  rdi=7;  r15=7

# --------------------------------------------- Offset Calculation --

rel8()
{
	local target=$(resolve $1)
	local delta=

	if [ $((target)) -gt $OFFSET ]
	then
		delta=$((target - OFFSET - 1))
	else
		delta=$((-(OFFSET - target + 1)))
	fi

	u8 $((delta & 0xff))
}

rel32()
{
	local target=$(resolve $1)
	local delta=

	if [ $((target)) -gt $OFFSET ]
	then
		delta=$((target - OFFSET - 4))
	else
		delta=$((-(OFFSET - target + 4)))
	fi

	u32 $((delta & 0xffffffff))
}

MACROS="rel8 rel16 rel32 $MACROS"

# ------------------------------------------------------ Modifiers --

macro oper  u8 0x66
macro addr  u8 0x67

direct=3
macro modrm  u8 '$(($1 << 6 | $2 << 3 | $3))'

w=8; r=4; x=2; b=1
macro rex  u8 '$((0x40 | $1))'

# --------------------------------------------------- Instructions --

macro nop        u8 0x90

macro cmp_ai     u8 '$((0x3c | $1))'
macro cmp_ai8    cmp_a 0 ';' u8 '$1'
macro cmp_ai16   oper ';' cmp_a 1 ';' u16 '$1'
macro cmp_ai32   cmp_a 1 ';' u32 '$1'
macro cmp_ai64   rex w ';' cmp_ai32 '$@'

macro cmp_ir     u8 '$((0x80 | $1))' '$((0xf8 | $2))'
macro cmp_ir8    cmp_ir 0 '$2' ';' u8 '$1'
macro cmp_ir16   oper ';' cmp_ir 1 '$2' ';' u16 '$1'
macro cmp_ir32   cmp_ir 1 '$2' ';' u32 '$1'
macro cmp_ir64   rex w ';' cmp_ir32 '$@'

macro cmp_rr     u8 '$((0x38 | $1))' ';' modrm direct '$2' '$3'
macro cmp_rr8    cmp_rr 0 '$1' '$2'
macro cmp_rr16   oper ';' cmp_rr32 '$@'
macro cmp_rr32   cmp_rr 1 '$1' '$2'
macro cmp_rr64   rex w ';' cmp_rr32 '$@'

macro ja_o8      u8 0x77 ';' rel8 '$1'
macro ja_o32     u8 0x0f 0x87 ';' rel32 '$1'
macro jae_o8     jnc_o8 '$@'
macro jae_o32    jnc_o32 '$@'
macro jbe_o8     u8 0x76 ';' rel8 '$1'
macro jbe_o32    u8 0x0f 0x86 ';' rel32 '$1'
macro jb_o8      jc_o8 '$@'
macro jb_o32     jc_o32 '$@'
macro jc_o8      u8 0x72 ';' rel8 '$1'
macro jc_o32     u8 0x0f 0x82 ';' rel32 '$1'
macro je_o8      jz_o8 '$@'
macro je_o32     jz_o32 '$@'
macro jg_o8      u8 0x7f ';' rel8 '$1'
macro jg_o32     u8 0x0f 0x8f ';' rel32 '$1'
macro jge_o8     u8 0x7d ';' rel8 '$1'
macro jge_o32    u8 0x0f 0x8d ';' rel32 '$1'
macro jl_o8      u8 0x7c ';' rel8 '$1'
macro jl_o32     u8 0x0f 0x8c ';' rel32 '$1'
macro jle_o8     u8 0x7e ';' rel8 '$1'
macro jle_o32    u8 0x0f 0x8e ';' rel32 '$1'
macro jmp_o8     u8 0xeb ';' rel8 '$1'
macro jmp_o32    u8 0xe9 ';' rel32 '$1'
macro jnc_o8     u8 0x73 ';' rel8 '$1'
macro jnc_o32    u8 0x0f 0x83 ';' rel32 '$1'
macro jne_o8     jnz_o8 '$@'
macro jne_o32    jnz_o32 '$@'
macro jno_o8     u8 0x71 ';' rel8 '$1'
macro jno_o32    u8 0x0f 0x81 ';' rel32 '$1'
macro jnp_o8     u8 0x7b ';' rel8 '$1'
macro jnp_o32    u8 0x0f 0x8b ';' rel32 '$1'
macro jns_o8     u8 0x79 ';' rel8 '$1'
macro jns_o32    u8 0x0f 0x89 ';' rel32 '$1'
macro jnz_o8     u8 0x75 ';' rel8 '$1'
macro jnz_o32    u8 0x0f 0x85 ';' rel32 '$1'
macro jo_o8      u8 0x70 ';' rel8 '$1'
macro jo_o32     u8 0x0f 0x80 ';' rel32 '$1'
macro jp_o8      u8 0x7a ';' rel8 '$1'
macro jp_o32     u8 0x0f 0x8a ';' rel32 '$1'
macro js_o8      u8 0x78 ';' rel8 '$1'
macro js_o32     u8 0x0f 0x88 ';' rel32 '$1'
macro jz_o8      u8 0x74 ';' rel8 '$1'
macro jz_o32     u8 0x0f 0x84 ';' rel32 '$1'

macro push_i8    u8 0x6a '$1'
macro push_i32   u8 0x68 ';' u32 '$1'

macro push_r16   oper ';' push_r64 '$@'
macro push_r64   u8 '$((0x50 | $1))'

macro pop_r16    oper ';' pop_r64 '$@'
macro pop_r64    u8 '$((0x58 | $1))'

macro test_ai    u8 '$((0xa8 | $1))'
macro test_ai8   test_ai 0 ';' u8 '$1'
macro test_ai16  oper ';' test_ai 1 ';' u16 '$1'
macro test_ai32  test_ai 1 ';' u32 '$1'
macro test_ai64  rex w ';' test_ai32 '$@'

macro test_ir    u8 '$((0xf6 | $1))' '$((0xc0 | $2))'
macro test_ir8   test_ir 0 '$2' ';' u8 '$1'
macro test_ir16  oper ';' test_ir 1 '$2' ';' u16 '$1'
macro test_ir32  test_ir 1 '$2' ';' u32 '$1'
macro test_ir64  rex w ';' test_ir32 '$@'

macro test_rr    u8 '$((0x84 | $1))' ';' modrm direct '$2' '$3'
macro test_rr8   test_rr 0 '$@'
macro test_rr16  oper ';' test_rr32 '$@'
macro test_rr32  test_rr 1 '$@'
macro test_rr64  rex w ';' test_rr32 '$@'
