EHDR_SIZE=64
PHDR_SIZE=56
SHDR_SIZE=64

OFFSET=0
VMA=0x40000000
SEGMENT_ALIGN=0x800

PHDRS_OFFSET=${PHDRS_OFFSET:-0}
PHDRS_SIZE=${PHDRS_SIZE:-0}
SHDRS_OFFSET=${SHDRS_OFFSET:-0}
TEXT_OFFSET=${TEXT_OFFSET:-0}
TEXT_SIZE=${TEXT_SIZE:-0}

text()
{
	TEXT_OFFSET=$OFFSET
	file $1
	TEXT_SIZE=$(($OFFSET - $TEXT_OFFSET))
	align $SEGMENT_ALIGN
}

phdrs()
{
	PHDRS_OFFSET=$OFFSET

	phdr $PT_LOAD $PF_R \
	     0x000 $VMA $VMA $TEXT_OFFSET $TEXT_OFFSET \
	     $SEGMENT_ALIGN

	phdr $PT_LOAD $(($PF_R | $PF_X)) $TEXT_OFFSET \
	     $(($VMA + $TEXT_OFFSET)) $(($VMA + $TEXT_OFFSET)) \
	     $TEXT_SIZE $TEXT_SIZE \
	     $SEGMENT_ALIGN

	PHDRS_SIZE=$(($OFFSET - $PHDRS_OFFSET))
	align $SEGMENT_ALIGN
}

plan()
{
	ident $ELFCLASS64 $ELFDATA2LSB $EV_CURRENT $ELFOSABI_NONE
	header $ET_EXEC $EM_X86_64 $EV_CURRENT \
	       $(($VMA + $TEXT_OFFSET)) $PHDRS_OFFSET $SHDRS_OFFSET \
	       0 $EHDR_SIZE \
	       $PHDR_SIZE 2 \
	       $SHDR_SIZE 0 0
	phdrs
	text $1
}

main()
{
	if [ $# -ne 1 ]
	then
		printf "usage: plan TEXT-FILE\n" 1>&2
		exit 2
	fi

	plan $1
}

main "$@"
